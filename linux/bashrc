# ~/.bashrc:executed by bash(1)for non-login shells.

# Note:PS1 and umask are already set in /etc/profile. You should not
# need this unless you want different defaults for root.
PS1='\h:\w\$ '
# umask 022
umask 000

# You may uncomment the following lines if you want `ls' to be colorized:
export LS_OPTIONS='--color=auto'
eval "$(dircolors)"
alias ls='ls $LS_OPTIONS'
alias ll='ls $LS_OPTIONS -l'
alias l='ls $LS_OPTIONS -lA'

# user defined alias
alias chmoda='chmod 777 -R ./'
alias ifreset='ifrst() { ifdown $1; ifup $1; }; ifrst'
alias dsearch='dpkg -l | grep '
alias aindent='astyle --style=ansi -s4 -U -A10 --c --suffix=none -xe'
alias cindent='find . -name "*.[ch]" | grep -v .si4project | xargs clang-format -style="{ BasedOnStyle: LLVM, KeepEmptyLinesAtTheStartOfBlocks: false, BreakBeforeBraces: WebKit, AllowShortFunctionsOnASingleLine: false, AllowShortIfStatementsOnASingleLine: true, AllowShortLoopsOnASingleLine: true, IndentCaseLabels: false, ColumnLimit: 200, SortIncludes: false, IndentWidth: 4 }" -i'
alias xindent='myindent() { file=$1; indent -o $file $file; }; myindent'
alias linkvm='mountvm() { mkdir -p $2; mount -t cifs -o username=root $1 $2; }; mountvm //192.168.1.31/projects ~/projects/share/liulang-vm/; mountvm //192.168.1.13/compile ~/projects/share/compile-vm/'
alias unlinkvm='umountvm() { umount $1; }; umountvm ~/projects/share/liulang-vm/; umountvm ~/projects/share/compile-vm/'

# user defined funcs
dpkgclr() {
    dpkg -l | grep ^rc | awk ' { print $2} ' | xargs apt-get -y purge
}

typeset -l issue #set lower case
issue=$(cat /etc/issue)
if [[ $issue =~ centos ]]; then
    alias appupg='appupg() { yum update; yum -y  upgrade; }; appupg; '
    alias appclr='appclr() { yum clean; yum -y autoremove; yum autoclean; yum -y purge; }; appclr; '
    alias install='yum install'
    alias remove='yum -y remove'
    alias search='yum search'
else
    alias halt='shutdown now'
    alias aptupg='aptupg() { apt-spy -a Asia -d stable -t 5; apt-get update; apt-get -y   upgrade; }; aptupg; '
    alias appupg='appupg() { apt-get update; apt-get -y  upgrade; }; appupg; '
    alias appclr='appclr() { apt-get clean; apt-get -y autoremove; apt-get autoclean; apt-get -y purge; }; appclr; '
    alias install='apt-get install'
    alias remove='apt-get -y --purge remove'
    alias search='apt-cache search'
fi

# kernel
KERNEL_CMDSTR="make mrprobe\nmake menuconfig\ncp /boot/config-??? .config\nmake -kpkg --initrd  --append-to-version=-liulang  -j 4 kernel_image kernel_headers"
alias kernel='echo -e "$KERNEL_CMDSTR"'
makekernel() {
    make menuconfig
    make -kpkg clean
    make -kpkg --initrd --append-to-version=-liulang --revision=1.0 kernel_image
}

# tftp-hpa
tftpfile='/etc/default/tftpd-hpa'
tftpbasic='TFTP_USERNAME="root"\nTFTP_ADDRESS="0.0.0.0:69"\nTFTP_OPTIONS="-v -l -c -s"'
prjroot='/root/projects'
tftpset() {
    if [ ! -d $1 ]; then
        echo "DIR NONEXISTENT: $1" && return
    fi
    tftpdir=$(cd $1 && pwd)
    echo -e $tftpbasic >$tftpfile && echo TFTP_DIRECTORY=$tftpdir >>$tftpfile && service tftpd-hpa restart
    echo "TFTP_DIRECTORY=$tftpdir"
}
alias tftpshow="service tftpd-hpa status; cat $tftpfile"
prjs=(lite ac3 xcat)
for prj in ${prjs[@]}; do
    alias tftp$prj="tftpset ${prjroot}/${prj}/release"
done

# angular
alias gen='ng generate'
alias serve='ng serve --host=0.0.0.0'

if [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
fi
if [[ $PWD == "/root" || $PWD == "/home/liulang" ]]; then
    cd projects
fi
ulimit -c unlimited
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib
